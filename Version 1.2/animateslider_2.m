% animateslider.mfunction animateslider_2;screenindex=0;res = SCREEN(screenindex,'Resolution');% - GRATING PATTERN -fprintf('Computing grating pattern ...\n');NS = 16;img = [];for s = 0:(NS-1)	G3 = round(s*256/(NS-1)) - 1;	stripheight = 2*(floor(res.height/(2*NS)));	strip = gammastrip(stripheight, res.width, 0, round(G3/2), G3);	img = [img ; strip];endw = SCREEN(screenindex,'OpenWindow',[],[],8);loadclut(w,gammaclut(1.0,0),0,8);SCREEN(w,'PutImage',img);% - - - - -% track mouse position with slider knobs.textRect = SetRect(16,16,192,48);xsliderRect=SetRect(0,0,res.width,16);ysliderRect=SetRect(0,0,16,res.height);xknobRect=SetRect(0,2,14,14);yknobRect=SetRect(2,0,14,14);%SCREEN(w,'FillRect',128);SCREEN(w,'FillRect',0,xsliderRect);SCREEN(w,'FrameRect',255,xsliderRect);SCREEN(w,'FillRect',0,ysliderRect);SCREEN(w,'FrameRect',255,ysliderRect);FlushEvents('mouseUp','mouseDown');while 1	[x,y,button]=GetMouse;	% - X -	dx=x-(xknobRect(RectLeft)+xknobRect(RectRight))/2;	residue=xknobRect;	if dx<0		residue(RectLeft)=residue(RectRight)+dx;	else		residue(RectRight)=residue(RectLeft)+dx;	end	xknobRect=OffsetRect(xknobRect,dx,0);	SCREEN(w,'FillRect',0,residue);	SCREEN(w,'FillRect',255,xknobRect);	% - Y -	dy=y-(yknobRect(RectTop)+yknobRect(RectBottom))/2;	residue=yknobRect;	if dy>0		residue(RectBottom)=residue(RectTop)+dy;	else		residue(RectTop)=residue(RectBottom)+dy;	end	yknobRect=OffsetRect(yknobRect,0,dy);	SCREEN(w,'FillRect',0,residue);	SCREEN(w,'FillRect',255,yknobRect);	% - GAMMA -	gamma = 0.9 + (x/(res.width-1))*2.2;		%% 0.5 , 2.5	gamma = max(0.9, min(gamma, 2.2));	offset = round(0 + (y/(res.height-1))*64);	%% 255	offset = max(0, min(offset, 64));	LoadClut(w, gammaclut(gamma,offset),0,8);	% - TEXT -	text = sprintf('g = %5.3f, b = %3d',gamma,offset);	SCREEN(w,'FillRect',0,textRect);	SCREEN(w,'DrawText',text,32,32);	% - - -	if any(button)break;end;	WaitSecs(0.02); % make sure we miss some frames, so mouse gets updatedendFlushEvents('mouseUp','mouseDown');SCREEN('CloseAll');clut = gammaclut(gamma,offset);figure(1), plot(0:255,clut,'r-'), axis([0 255 0 255]);fprintf('g = %5.3f, b = %3d\n', gamma, offset);return;function clut = gammaclut(gamma,thresh);g = 255*((((0:255)')/255).^(1/gamma));g = thresh + ((255-thresh)/255)*g;clut = repmat(g,1,3);% clut(:,1) = 0;return;function strip = gammastrip(NR,NC,G1,G2,G3);barcycle = 20;mask = mod(1:NC, barcycle) >= (barcycle/2);row1 = G1*mask + G2*(1-mask);row2 = G3*mask + G2*(1-mask);pair = [row1; row2];strip = repmat(pair,NR/2,1);return;